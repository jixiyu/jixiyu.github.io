<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>paillier算法了解</title>
      <link href="/2019/09/07/paillier/"/>
      <url>/2019/09/07/paillier/</url>
      
        <content type="html"><![CDATA[<blockquote><p>密码学和共识算法<br>made by jixi  </p></blockquote><p>Paillier加密系统，是1999年paillier发明的概率公钥加密系统。基于复合剩余类的困难问题。该加密算法是一种同态加密，满足加法和数乘同态。  </p><hr><h3 id="1-算法原理"><a href="#1-算法原理" class="headerlink" title="1. 算法原理"></a>1. 算法原理</h3><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1567830106180.png" alt="enter description here"></p><a id="more"></a><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1567830226499.png" alt="enter description here"><br><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1567830240135.png" alt="enter description here"></p><hr><h3 id="2-java代码"><a href="#2-java代码" class="headerlink" title="2. java代码"></a>2. java代码</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">package xinxianquan;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> java.math.*;</span><br><span class="line"><span class="keyword">import</span> java.util.*; </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @author node</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Paillier</span></span>&#123;</span><br><span class="line"><span class="comment">//选取两个较大的质数p与q，lambda是p-1与q-1的最小公倍数</span></span><br><span class="line"> private BigInteger p, q, lambda; </span><br><span class="line"> </span><br><span class="line"><span class="comment">//n是p与q的乘积</span></span><br><span class="line"> public BigInteger n;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//n_square = n*n </span></span><br><span class="line"> public BigInteger n_square; </span><br><span class="line"> private BigInteger g;           </span><br><span class="line"> private int bitLength;</span><br><span class="line"> </span><br><span class="line"> public Paillier(int bitLengthVal, int certainty) &#123;         </span><br><span class="line">   Key(bitLengthVal, certainty);     </span><br><span class="line">   &#125; </span><br><span class="line"> public Paillier() &#123;          </span><br><span class="line"> Key(<span class="number">32</span>, <span class="number">64</span>);      </span><br><span class="line"> &#125;</span><br><span class="line"> public <span class="keyword">void</span> Key(int bitLengthVal, int certainty) &#123;</span><br><span class="line"> bitLength = bitLengthVal;</span><br><span class="line"><span class="comment">//随机构造两个大素数，详情参见API，BigInteger的构造方法</span></span><br><span class="line"> p = <span class="keyword">new</span> BigInteger(bitLength / <span class="number">2</span>, certainty, <span class="keyword">new</span> Random());         </span><br><span class="line"> q = <span class="keyword">new</span> BigInteger(bitLength / <span class="number">2</span>, certainty, <span class="keyword">new</span> Random());  </span><br><span class="line"> </span><br><span class="line"> <span class="comment">//n=p*q;</span></span><br><span class="line"> n = p.multiply(q); </span><br><span class="line"> </span><br><span class="line"> <span class="comment">//nsquare=n*n;        </span></span><br><span class="line"> n_square = n.multiply(n); </span><br><span class="line"> g=<span class="keyword">new</span> BigInteger(<span class="string">"2"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="comment">//求p-1与q-1的乘积除于p-1于q-1的最大公约数</span></span><br><span class="line"> lambda = p.subtract(BigInteger.ONE).multiply(q.subtract(BigInteger.ONE))</span><br><span class="line"> .divide(p.subtract(BigInteger.ONE).gcd(q.subtract(BigInteger.ONE))); </span><br><span class="line"> </span><br><span class="line"><span class="comment">//检测g是某满足要求</span></span><br><span class="line"> <span class="keyword">if</span> (g.modPow(lambda, n_square).subtract(BigInteger.ONE).divide(n).gcd(n).intValue() != <span class="number">1</span>) &#123;  </span><br><span class="line"> System.out.println(<span class="string">"g的选取不合适!"</span>);             </span><br><span class="line"> System.exit(<span class="number">1</span>); </span><br><span class="line"> &#125;      </span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//给定r的加密</span></span><br><span class="line">    public BigInteger En(BigInteger m, BigInteger r) &#123;          </span><br><span class="line">    <span class="keyword">return</span> g.modPow(m, n_square).multiply(r.modPow(n, n_square)).mod(n_square);     </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//随机生成r的加密</span></span><br><span class="line">    public BigInteger En(BigInteger m) &#123;          </span><br><span class="line">    BigInteger r = <span class="keyword">new</span> BigInteger(bitLength, <span class="keyword">new</span> Random());          </span><br><span class="line">        <span class="keyword">return</span> g.modPow(m, n_square).multiply(r.modPow(n, n_square)).mod(n_square); </span><br><span class="line">       &#125; </span><br><span class="line">    </span><br><span class="line"> <span class="comment">//解密</span></span><br><span class="line">    public BigInteger De(BigInteger c) &#123;          </span><br><span class="line">    BigInteger u = g.modPow(lambda, n_square).subtract(BigInteger.ONE).divide(n).modInverse(n);         </span><br><span class="line">        <span class="keyword">return</span> c.modPow(lambda, n_square).subtract(BigInteger.ONE).divide(n).multiply(u).mod(n);      </span><br><span class="line">        &#125; </span><br><span class="line">    </span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span>[] args) &#123;</span><br><span class="line">     Paillier paillier = <span class="keyword">new</span> Paillier(); </span><br><span class="line">     <span class="comment">//创建两个大整数m1,m2:</span></span><br><span class="line">     BigInteger m1 = <span class="keyword">new</span> BigInteger(<span class="string">"20"</span>);          </span><br><span class="line">     BigInteger m2 = <span class="keyword">new</span> BigInteger(<span class="string">"60"</span>);         </span><br><span class="line">     System.out.println(<span class="string">"原文是:"</span>);        </span><br><span class="line">     System.out.println(m1+<span class="string">"和"</span>+m2);</span><br><span class="line">     </span><br><span class="line">     <span class="comment">//将m1,m2加密得到em1,em2:        </span></span><br><span class="line">     BigInteger em1 = paillier.En(m1);          </span><br><span class="line">     BigInteger em2 = paillier.En(m2);  </span><br><span class="line">     </span><br><span class="line">     <span class="comment">//加密后的结果        </span></span><br><span class="line">     System.out.println(<span class="string">"m1加密结果"</span>+em1);          </span><br><span class="line">     System.out.println(<span class="string">"m2加密结果"</span>+em2);</span><br><span class="line">     </span><br><span class="line">    <span class="comment">//解密后的结果        </span></span><br><span class="line">     System.out.println(<span class="string">"m1解密结果"</span>+paillier.De(em1));          </span><br><span class="line">     System.out.println(<span class="string">"m2解密结果"</span>+paillier.De(em2).toString());  </span><br><span class="line">     </span><br><span class="line">     <span class="comment">/**</span></span><br><span class="line"><span class="comment">      * paillier性质</span></span><br><span class="line"><span class="comment">      * */</span></span><br><span class="line">     <span class="comment">//加法同态</span></span><br><span class="line">     <span class="comment">// m1+m2,求明文数值的和  </span></span><br><span class="line">     System.out.println(<span class="string">"**************************求和********************"</span>);        </span><br><span class="line">     BigInteger sum_m1m2 = m1.add(m2).mod(paillier.n);          </span><br><span class="line">     System.out.println(<span class="string">"明文数值的和 : "</span> + sum_m1m2.toString());</span><br><span class="line">     System.out.println(<span class="string">"测试"</span>+m1.add(m2));</span><br><span class="line">     </span><br><span class="line">    <span class="comment">// em1+em2，求密文数值的和       </span></span><br><span class="line">     BigInteger product_em1em2 = em1.multiply(em2).mod(paillier.n_square);         </span><br><span class="line">     System.out.println(<span class="string">"密文和: "</span> + product_em1em2.toString());          </span><br><span class="line">     System.out.println(<span class="string">"密文和解密: "</span> + paillier.De(product_em1em2).toString());</span><br><span class="line">     </span><br><span class="line">     </span><br><span class="line">     <span class="comment">// 数乘同态</span></span><br><span class="line">     System.out.println(<span class="string">"***************************数乘*********************"</span>);        </span><br><span class="line">     <span class="comment">//做乘法，先将两个数相乘，然后对n求模        </span></span><br><span class="line">     BigInteger multiply_m1m2 = m1.multiply(m2).mod(paillier.n);        </span><br><span class="line">     System.out.println(<span class="string">"两个大整数相乘: "</span> + multiply_m1m2.toString()); </span><br><span class="line">     System.out.println(<span class="string">"测试"</span>+m1.multiply(m2));</span><br><span class="line">     </span><br><span class="line">    <span class="comment">//数乘，密文数，乘上某个明文数C的密文值等于=密文数的C次方对n平方求模         </span></span><br><span class="line">     BigInteger multiply_em1em2 = em1.modPow(m2, paillier.n_square);          </span><br><span class="line">     System.out.println(<span class="string">"数乘密文值: "</span> + multiply_em1em2.toString());          </span><br><span class="line">     System.out.println(<span class="string">"数乘密文值解密: "</span> + paillier.De(multiply_em1em2).toString());  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-运行结果"><a href="#3-运行结果" class="headerlink" title="3. 运行结果"></a>3. 运行结果</h3><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1567830299846.png" alt="enter description here"></p><hr><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2>]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 同态加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/03/hello-world/"/>
      <url>/2019/09/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你有没有在一瞬间忽然认清了一个人？</title>
      <link href="/2019/03/24/firstdemo/"/>
      <url>/2019/03/24/firstdemo/</url>
      
        <content type="html"><![CDATA[<h3 id="你有没有在一瞬间忽然认清了一个人？"><a href="#你有没有在一瞬间忽然认清了一个人？" class="headerlink" title="你有没有在一瞬间忽然认清了一个人？"></a>你有没有在一瞬间忽然认清了一个人？</h3><hr><p>我曾经喜欢过一个女生。一个高二坐在我后桌的女生。</p><p>我不知道怎么描述我有多喜欢她，但却记得十七八岁时只知道学习的我，愿意每天牺牲二十分钟午休的时间来折爱心。爱心上写上着那天的天气，日期和她衣服的颜色。</p><p>我也记得，为了给她准备一份有意义的生日礼物，我恳求班上18位和她关系比较近的同学，为她写了生日祝福。</p><p>我还记得，我会在开小灶时，把学到的东西一点一点整理的起来送给她。</p><p>在中学阶段，女生总是比同龄男生要成熟。我的心思她很早就猜出来了。整整一年多的时间，她都一直疏远我，我们说的话可能不超过10句。</p><p>毕业那天，我把所有的纸心按日期整理好，装到铁盒子里。盒子沉甸甸的，我让朋友帮我送给了她。</p><p>我不认为那是告白，那对于我来说更像是告别，我并没有很难过，就像我明白自己不会因为考不上清北而难过一样。只是那种感觉非常微妙，有些遗憾，又好像有点轻松。</p><p>当天夜里，我收到了一封邮件。</p><a id="more"></a><p>其中有几段话是这样的，</p><p>“一段时间的相处来看，你做了很多，我也很感动，你心思很细腻，但是我真的不值得你花这么多心思和时间。</p><p>我觉得现在这种时候，我只要沉默或抱怨就好，因为我还没有到真正到接触感情的时候，我们毕竟太年轻。</p><p>……</p><p>我们即将遇见更多 更复杂的人，希望你能继续用执著和单纯对待他们，真心希望你有更多的快乐。”</p><p>六年过去了，我的女朋友换了一个又一个。</p><p>第一任已经结婚生子。</p><p>第二任考上了普林斯顿的研究生。</p><p>第三任比我小了四岁，天真烂漫。</p><p>但长相外形姣好性格温和的她却是一个男朋友也没有过。</p><p>一直都是一个人，就像高中那样。</p><p>她写的那封信我看过几百遍，像做语文的阅读理解一样。因为老师说过，多读文章才看得懂。</p><p>于是我一直断断续续的读着。断断续续的读了六年。</p><p>这些年，我们联系的不多，我也没有再在现实中见过她。</p><p>直到上一周，她突然问了我一些关于学业上的事情，特别的自然，就像六年前，高二前后桌时她问我练习题一样。</p><p><b> 有些事情，真的没有我们想的那么复杂。</b></p><p>一道逻辑很简单的算法题，我们却试图套用一些非常复杂的数学模型。花了大半天的时间却发现和结果相差甚远。</p><p>是啊，很多时候答案很简单，偏偏是我们自己没有想到而已。</p><p>哦，原来真的会有那样的女生，她和你说的全都是实话。没有套路，没有敷衍。她只是把她自己想的告诉你而已。</p><p>原来我一直以为，女生拒绝男生总需要一些看似好听得借口，比如我们还小，不适合谈感情。</p><p>原来我一直以为，那封信的存在只是为了让我觉得没有那么难堪，比直接说出“我看不上你”来的更容易接受。</p><p>原来我一直以为，是我长的不够帅或者成绩不够好，才无法拥有那份感情。</p><p>原来曾经，我也是个戏精啊。</p><p>后来我才知道，在她收到我的生日礼物的时候也流了泪。</p><p>后来我才知道，在她被其他男生欺负的时候，让周围的人不要告诉我。</p><p>后来我才知道，在更早之前，她都不会接受男生送给她的礼物。</p><p>我想起了她托朋友转达我的那句话，“安心学习，不要让十年以后的我们感到遗憾。”</p><p>明明是那样一个内向的女生，我却自作主张为她收集生日祝福，搞的满城风雨。</p><p>明明她最好的朋友就是我们班出了名的学神，我这个前十都没有的渣渣还自以为是的给她做复习材料。</p><p>明明当时告诉自己要一直等她，但从大学以后自己身边却总是异性不断。</p><p>明明碰到过很多绿茶还被当过备胎，却迟迟不能分清什么是伪善，什么才是单纯。</p><p>这么些年我一直努力的学习，提升自己，有很大一部分原因就是想证明当时她没有和我在一起是个错误决定。</p><p><b> 实际上我只成功的证明了自己是个傻逼。</b> </p><p>她一直都是那样一个谁也不想伤害的女生。从来都是客观向上，善待生活。从不和男生暧昧，她只是觉得自己还不想恋爱，她只是有她自己的想法。</p><p>或许不久之后她将会开始一段感情，或许又不会。</p><p>虽然也有一些好奇，不过现在，我不会再尝试着揣测她的想法。因为她应该被尊重，尤其是被那些有着或是有过我当时年那般心思的男生。</p><p>确实对自己有些失望。</p><p>但至少，我忽然间明白了，高中我喜欢过的那个女生，是多么的值得我用16-18岁的年华去喜欢。</p><p>因为她呀，见山是山，见海是海，见我也是我。</p><p>就像她喜欢的艾薇儿唱出来的那样，</p><p><b> This innocence is brilliant.</b> </p><p>愿她被这世界温柔相待。</p><p>也愿她能碰到让她不再漂泊的人。</p><hr><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 情感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown语法说明</title>
      <link href="/2018/12/26/markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2018/12/26/markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>markdown语法说明<br>2018年12月26日09:55:41<br>62 篇   </p></blockquote><h3 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h3><p>Markdown是一种轻量级标记语言，它以纯文本形式(易读、易写、易更改)编写文档，并最终以HTML格式发布。  </p><p>Markdown也可以理解为将以MARKDOWN语言编写的语言转换成HTML内容的工具，最初是一个perl脚本Markdown.pl。  </p><p>下面正文，Markdown语法主要分为如下几大部分：  </p><p><b>标题，段落，区块引用，代码区块，强调，列表，分割线，链接，图片，反斜杠 \，符号’`’。</b>  </p><a id="more"></a><hr><h3 id="1-基本"><a href="#1-基本" class="headerlink" title="1. 基本"></a>1. 基本</h3><ol><li>标题——使用#，可表示1-6级标题。  </li></ol><p>#一级标题  </p><p>##二级标题  </p><p>###三级标题  </p><p>####四级标题  </p><p>#####五级标题  </p><p>######六级标题  </p><p>效果：  </p><blockquote><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1></blockquote><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><ol start="2"><li>段落  </li></ol><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。  </p><ol start="3"><li>区块引用  </li></ol><p>在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用，如：  </p><p>&gt; 区块引用<br>&gt;&gt; 嵌套引用  </p><p>效果：  </p><blockquote><p>区块引用  </p><blockquote><p>嵌套引用  </p></blockquote></blockquote><ol start="4"><li>代码区块  </li></ol><p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如  </p><p>普通段落：<br>void main()<br>{<br>printf(“Hello, Markdown.”);<br>}  </p><p>代码区块：  </p><pre><code>void main()  {     printf(&quot;Hello, Markdown.&quot;);  }      </code></pre><ol start="5"><li>强调  </li></ol><p>在强调内容两侧分别加上*或者_，如：  </p><p>*斜体*，_斜体_  </p><p>**粗体**，__粗体__  </p><p>效果：</p><blockquote><p><em>斜体</em>，<em>斜体</em>  </p></blockquote><blockquote><p><strong>粗体</strong>，<strong>粗体</strong>  </p></blockquote><ol start="6"><li>列表  </li></ol><p>使用·、+、或-标记无序列表，如：  </p><p>-（+<em>） 第一项 -（+</em>） 第二项 - （+*）第三项</p><p>注意：标记后面最少有一个空格或制表符。若不在引用区块中，必须和前方段落之间存在空行。  </p><p>效果：  </p><blockquote><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote><p>有序列表的标记方式是将上述的符号换成数字,并辅以.，如：  </p><p>1.第一项<br>2.第二项<br>3.第三项  </p><p>效果：  </p><blockquote><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></blockquote><ol start="7"><li>分割线  </li></ol><p>分割线最常使用就是三个或以上*，还可以使用-和_。  </p><hr><ol start="8"><li>反斜杠\  </li></ol><p>相当于反转义作用。使符号成为普通符号。  </p><ol start="9"><li>符号’`’  </li></ol><p>起到标记作用。如：</p><p>`ctrl+a`  </p><p>效果：  </p><blockquote><p><code>ctrl+a</code>  </p></blockquote><h3 id="2-高级"><a href="#2-高级" class="headerlink" title="2. 高级"></a>2. 高级</h3><p>1.空格  &amp;emsp；</p><p>2.换行  &lt;br&gt;</p><p>3.代码  ‘’’   Text ‘’’</p><p>4.删除线   <del>~   text ~</del></p><p>5.加粗    &lt;b&gt;  text  &lt;/b&gt;</p><p>6.网页链接    ctrl+L</p><ol start="7"><li>插入图片，调整大小   </li></ol><img src width="300" hegiht="600" align="center">  <hr><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2>]]></content>
      
      
      <categories>
          
          <category> 技术驿站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim study</title>
      <link href="/2018/12/26/vim-study/"/>
      <url>/2018/12/26/vim-study/</url>
      
        <content type="html"><![CDATA[<blockquote><p>vim study<br>2018年12月26日11:00:43<br>64 篇<br>made by jixi  </p></blockquote><h3 id="Vim指令学习"><a href="#Vim指令学习" class="headerlink" title="Vim指令学习"></a>Vim指令学习</h3><h3 id="1-Vim-配置（CentOS-环境）"><a href="#1-Vim-配置（CentOS-环境）" class="headerlink" title="1.Vim 配置（CentOS 环境）"></a>1.Vim 配置（CentOS 环境）</h3><ul><li>编辑配置文件是：sudo vim /etc/vimrc  </li></ul><h3 id="2-Vim-基础快捷键"><a href="#2-Vim-基础快捷键" class="headerlink" title="2.Vim 基础快捷键"></a>2.Vim 基础快捷键</h3><p>注意  </p><ul><li>严格区分字母大小写  </li><li>含有 <code>Ctrl</code> 字眼都表示 Ctrl 键盘按钮  </li><li>特定符号需要配合 Shift  </li><li>键，比如字母键盘区上面的数字区：!@#%%^&amp;*()  </li><li>要按出冒号键 <code>:</code> 也是需要 Shift 的  </li></ul><a id="more"></a><h3 id="3-移动"><a href="#3-移动" class="headerlink" title="3.移动"></a>3.移动</h3><ul><li><code>j</code>，下</li><li><code>k</code>，上</li><li><code>h</code>，左</li><li><code>l</code>，右</li><li><code>v</code>，按 v 之后按方向键可以选中你要选中的文字</li><li><code>gg</code>，跳到第 1 行</li><li><code>G</code>，跳到第最后行</li><li><code>16G</code> 或 <code>:16</code>，跳到第 16 行</li><li><code>$</code>，到本行 <strong>行尾</strong></li><li><code>0</code>，到本行 <strong>行头</strong></li><li><code>w</code>，到下一个单词的 <strong>开头</strong></li><li><code>e</code>，到下一个单词的 <strong>结尾</strong></li><li><code>Ctrl + u</code>，向文件 <strong>首翻</strong> 半屏</li><li><code>Ctrl + d</code>，向文件 <strong>尾翻</strong> 半屏</li><li><code>Ctrl + f</code>，向文件 <strong>尾翻</strong> 一屏</li><li><code>Ctrl + b</code>，向文件 <strong>首翻</strong> 一屏</li><li><code>*</code>，匹配光标当前所在的单词，移动光标到 <strong>下一个</strong> 匹配单词</li><li><code>#</code>，匹配光标当前所在的单词，移动光标到 <strong>上一个</strong> 匹配单词</li><li><code>^</code>，到本行第一个单词头</li><li><code>g_</code>，到本行最后一个单词尾巴</li><li><code>%</code>，匹配括号移动，包括 <strong>(、{、[</strong></li></ul><hr><h3 id="4-插入"><a href="#4-插入" class="headerlink" title="4.插入"></a>4.插入</h3><ul><li><code>I</code>，在当前 <strong>行首</strong> 插入</li><li><code>A</code>，在当前 <strong>行尾</strong> 插入</li><li><code>i</code>，在当前字符的 <strong>左边</strong> 插入</li><li><code>a</code>，在当前字符的 <strong>右边</strong> 插入</li><li><code>o</code>，在当前行 <strong>下面</strong> 插入一个新行</li><li><code>O</code>，在当前行 <strong>上面</strong> 插入一个新行</li></ul><hr><h3 id="5-删除"><a href="#5-删除" class="headerlink" title="5.删除"></a>5.删除</h3><ul><li><p><code>x</code>，删除 <strong>光标后</strong> 的 1 个字符</p></li><li><p><code>2x</code>，删除 <strong>光标后</strong> 的 2 个字符</p></li><li><p><code>X</code>，删除 <strong>光标前</strong> 的 1 个字符</p></li><li><p><code>2X</code>，删除 <strong>光标前</strong> 的 2 个字符</p></li><li><p><code>dd</code>，删除当前行</p></li><li><p><code>cc</code>，删除当前行后进入 insert 模式</p></li><li><p><code>dw</code>，删除当前光标下的单词/空格</p></li><li><p><code>d$</code>，删除光标至 <strong>行尾</strong> 所有字符</p></li><li><p><code>dG</code>，删除光标至 <strong>文件尾</strong> 所有字符</p></li><li><p><code>3dd</code>，从当前光标开始，删掉 3 行</p></li><li><p><code>echo &gt; aa.txt</code>，从 bash 角度清空文件内容，这个比较高效</p></li><li><p>复制</p><ul><li><code>y</code>，复制光标所选字符</li><li><code>yw</code>，复制光标后单词</li><li><code>yy</code>，复制当前行</li><li><code>4yy</code>，复制当前行及下面 4 行</li><li><code>y$</code>，复制光标位置至 <strong>行尾</strong> 的内容</li><li><code>y^</code>，复制光标位置至 <strong>行首</strong> 的内容</li></ul></li><li><p>粘贴</p><ul><li><code>p</code>，将粘贴板中内容复制到 <strong>光标之后</strong></li><li><code>P</code>，将粘贴板中内容复制到 <strong>光标之前</strong></li></ul></li><li><p>其他</p><ul><li><code>ddp</code>，交换当前光标所在行和下一行的位置</li><li><code>u</code>，撤销</li><li><code>:wq</code>，退出并 <strong>保存</strong></li><li><code>:q!</code>，退出并 <strong>不保存</strong></li><li><code>Ctrl + v</code>，进入 Vim 列编辑</li><li><code>guu</code>，把当前行的字母全部转换成 <strong>小写</strong></li><li><code>gUU</code>，把当前行的字母全部转换成 <strong>大写</strong></li><li><code>g~~</code>，把当前行的字母是大写的转换成小写，是小写的转换成大写</li><li><code>:saveas /opt/setups/text.txt</code>，另存到 /opt/setups/text.txt</li></ul></li></ul><h3 id="6-搜索"><a href="#6-搜索" class="headerlink" title="6.搜索"></a>6.搜索</h3><ul><li><p><code>/YouMeek</code>，从光标开始处向文件尾搜索 YouMeek 字符，按 <code>n</code> 继续向下找，按 <code>N</code> 继续向上找</p></li><li><p><code>?YouMeek</code>，从光标开始处向文件首搜索 YouMeek 字符，按 <code>n</code> 继续向下找，按 <code>N</code> 继续向上找</p></li><li><p>替换</p><ul><li><code>:%s/YouMeek/Judasn/g</code>，把文件中所有 YouMeek 替换为：Judasn</li><li><code>:%s/YouMeek/Judasn/</code>，把文件中所有行中第一个 YouMeek 替换为：Judasn</li><li><code>:s/YouMeek/Judasn/</code>，把光标当前行第一个 YouMeek 替换为 Judasn</li><li><code>:s/YouMeek/Judasn/g</code>，把光标当前行所有 YouMeek 替换为 Judasn</li><li><code>:s#YouMeek/#Judasn/#</code>，除了使用斜杠作为分隔符之外，还可以使用 # 作为分隔符，此时中间出现的 / 不会作为分隔符，该命令表示：把光标当前行第一个 YouMeek/ 替换为 Judasn/</li><li><code>:10,31s/YouMeek/Judasng</code>，把第 10 行到 31 行之间所有 YouMeek 替换为 Judasn</li></ul></li></ul><hr><h3 id="7-Vim-的特殊复制、黏贴"><a href="#7-Vim-的特殊复制、黏贴" class="headerlink" title="7.Vim 的特殊复制、黏贴"></a>7.Vim 的特殊复制、黏贴</h3><ul><li>Vim 提供了 12 个剪贴板，分别是：<code>0,1,2,3,4,5,6,7,8,9,a,&quot;</code>，默认采用的是 <code>&quot;</code>，也就是双引号，可能你初读感觉很奇怪。你可以用 Vim 编辑某个文件，然后输入：<code>:reg</code>。你可以看到如下内容：  </li></ul><p><img src="https://youmeek.gitbooks.io/linux-tutorial/content/images/Vim-Cut-And-Paste-a-1.png" alt="vim"></p><ul><li>复制到某个剪切板的命令：<code>&quot;7y</code>，表示使用 7 号剪切板。</li><li>黏贴某个剪切板内容：<code>&quot;7p</code>，表示使用 7 号剪切板内容进行黏贴</li></ul><hr><h3 id="8-Vim-配置"><a href="#8-Vim-配置" class="headerlink" title="8.Vim 配置"></a>8.Vim 配置</h3><p>我个人本地不使用 Vim 的，基本上都是在操作服务器的时候使用，所以这里推荐这个配置文件</p><ul><li><a href="https://github.com/wklken/vim-for-server" target="_blank" rel="noopener">vim-for-server</a></li><li>在假设你已经备份好你的 Vim 配置文件后，使用该配置文件：<code>curl https://raw.githubusercontent.com/wklken/vim-for-server/master/vimrc &gt; ~/.vimrc</code></li><li>效果如下：  </li></ul><p><img src="https://raw.githubusercontent.com/wklken/gallery/master/vim/vim-for-server.png" alt="vim-for-server"></p><p>需要特别注意的是，如果你平时粘贴内容到终端 Vim 出现缩进错乱，一般需要这样做：</p><ul><li>进入 vim 后，按 <code>F5</code>，然后 <code>shirt + insert</code> 进行粘贴。这种事就不会错乱了。</li><li>原因是：<code>vim ~/.vimrc</code> 中有一行这样的设置：<code>set pastetoggle=&lt;F5&gt;</code></li></ul><hr><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><blockquote><p>2018年12月26日11:35:40</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 技术驿站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 指令学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>极客趣谈2——健康常识玉运动实践</title>
      <link href="/2018/12/23/%E6%9E%81%E5%AE%A2%E8%B6%A3%E8%B0%88/"/>
      <url>/2018/12/23/%E6%9E%81%E5%AE%A2%E8%B6%A3%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<blockquote><p>book<br>2018年12月23日13:49:43<br>61 篇<br>made by jixi  </p></blockquote><h2 id="极客趣谈2——健康常识玉运动实践"><a href="#极客趣谈2——健康常识玉运动实践" class="headerlink" title="极客趣谈2——健康常识玉运动实践"></a>极客趣谈2——健康常识玉运动实践</h2><h3 id="1-重启人体操作系统：健康和人类代码库"><a href="#1-重启人体操作系统：健康和人类代码库" class="headerlink" title="1.重启人体操作系统：健康和人类代码库"></a>1.重启人体操作系统：健康和人类代码库</h3><ol><li><p>水果和蔬菜在人类祖先的饮食中占50%，而在当代美国人的饮食中只占13%，这意味着抗氧化营养素的摄入大大下降了。  </p></li><li><p>日常生活中习惯性长期静坐，这一生活方式的后果是至少增加了35种慢性疾病的风险。  </p></li></ol><p>3.</p><ul><li>现在，试试崭新的生活方式吧。  不要设定闹钟，等太阳升起睡到自然醒，离上班时间还早，还有大把的空闲时间够你挥霍。  </li><li>起床后，首先倒一杯红茶或咖啡，然后走出门，沐浴在阳光里。  </li><li>晒晒太阳，冥想一分钟，再打几下太极，在草地上做几个俯卧撑，在街对面的攀爬杆上做几个引体向上。再哚上几口咖啡，然后回家准备乘车上班。  </li><li>从医学理论上说，当你凝视天空时，沐浴在阳光下的时候，光纤会投射到视网膜上，然后传到大脑中的下丘脑和松果体，就在此时，定下当天的昼夜节律。  </li></ul><a id="more"></a><hr><h3 id="2-让数据说话：健身工具和应用"><a href="#2-让数据说话：健身工具和应用" class="headerlink" title="2. 让数据说话：健身工具和应用"></a>2. 让数据说话：健身工具和应用</h3><ol><li><p>NutritionData——（<a href="http://www.nutritiondata.com）" target="_blank" rel="noopener">www.nutritiondata.com）</a>  </p></li><li><p>Fitday——（<a href="http://www.fitday.com）" target="_blank" rel="noopener">www.fitday.com）</a>  </p></li></ol><ul><li>fitday是一个比较好的用于追踪饮食并分析富含或缺乏某种营养的工具。  </li><li>如果要对全部或部分饮食进行定期追踪，大致了解膳食中的宏量和微量营养素含量，fitday就能够派上用场。  </li><li>Fitday能够方便保存用户输入的食物，因此在此遇到这种食物时，可以缩短输入的时间。每天输入的食物数据都能够保存在日历中供日后查看。  </li></ul><ol start="3"><li><p>USDA国家营养数据库——（<a href="http://www.nal.usda.gov/fnic/foodcomp/search/）" target="_blank" rel="noopener">www.nal.usda.gov/fnic/foodcomp/search/）</a>  </p></li><li><p>PuMmed——（<a href="http://pubmed.com）" target="_blank" rel="noopener">http://pubmed.com）</a>  </p></li></ol><ul><li>生物医学的论文的引用  </li></ul><hr><h3 id="3-宏量营养素：蛋白质、脂肪和碳水化合物"><a href="#3-宏量营养素：蛋白质、脂肪和碳水化合物" class="headerlink" title="3. 宏量营养素：蛋白质、脂肪和碳水化合物"></a>3. 宏量营养素：蛋白质、脂肪和碳水化合物</h3><ol><li><b>碳水化合物</b>  </li></ol><ul><li>可简单（如蔗糖），可复杂（如淀粉）。碳水化合物的最小成分是单糖，就是单个分子，比如葡萄糖，果糖和半乳糖。  </li><li>摄入的食物中，几乎不含有这些分子的原型。他们是食物消化后形成的，被小肠吸收后进入血液或肝脏（果糖进入肝脏）。  </li><li>葡萄糖进入血液后，能为大脑供能或被肌肉细胞或肝脏细胞摄取，重新组合成糖原。糖原是一个特殊的淀粉，人类和动物可以将其存储起来供日后使用。</li><li>过剩的碳水化合物能够并经常转化为脂肪存储起来。  </li><li>身体必须去除(即处理掉)过剩的葡萄糖。因为过剩的葡萄糖对细胞是有毒性的。如果体内的糖原已经过剩(由于吃太多碳水化合物或者从来不通过运动的方式消耗掉糖原),身体就没有剩余空间以淀粉的形式储存更多的葡萄糖。骨骼细胞也会氧化糖以供能(当作燃料来燃烧)。或者身体能够以脂肪的形式把葡萄糖储存在肝脏里或脂肪组织里(脂肪组织是身体里其他储存脂肪的地方)。  </li></ul><ol start="2"><li><b>葡萄糖是能量燃料,但也不能毫无节制</b>  </li></ol><ul><li><p>如果不能储存或者消耗掉自己吸收的葡萄糖,可能就会进入空腹高血糖的初期,即过量的糖溶解在血浆或血液中。因此,每年体检时,一般都要包括空腹葡萄糖检测,检查糖代谢和相关的激素(比如胰岛素和瘦素)是否正常  </p></li><li><p>只要将能量和碳水化合物的摄入量保持在界限范围之内也就是说,与总能量消耗保持一致,我们就能够使自己的血糖代谢低于初期糖尿病患者的血糖代谢水平(一些医学协会或国家标准将其定义为多次空腹血糖高于100)。间歇性禁食有助于降低空腹血糖水平。  </p></li><li><p>这一点有很多人都试过,如果觉得自己血糖高,可减少或基本取消摄入米和面之类淀粉含量高的主食,血糖降低的效果非常明显。  </p></li></ul><ol start="3"><li><b>分析自身的碳水化合物</b>  </li></ol><ul><li><p>要想确定食物的果糖含量,可以在NutritionData网站上找。比如查找12盎司(约354毫升)雪碧——（http:/nutritiondata.sel.com/acs/beverages3870/2）  </p></li><li><p>这个小小的练习演示了如何分析自己摄取的食物。截取了NutritionData的部分内容,显示了罐装苏打水所含的碳水化合物。  </p></li></ul><ul><li><p>这罐饮料含有33克或者说132卡热量的糖。你猜怎么着?这还是免费续杯的!它所含的碳水化合物包括1915毫克,即大约192克果糖和2399毫克(24克)蔗糖。但是蔗糖中有约50%的果糖,因此可以得出总果糖含量大概是19151+(2399/2)=20350毫克或203克。  </p></li><li><p>在万分自责并决定打死也不喝苏打水之前,你可要注意,人工培育的大苹果也含有大量的果糖。  </p></li><li><p>除了其他特征外,人工培育的苹果比又小又酸的野生苹果更大,更甜。人工培育苹果的这些特征是好的,并且能够全年为很多人提供含有抗氧化物和维生素C的新鲜苹果。但从果糖这个方面来说,人工培育苹果就不好了,理由如前所述。此外,吃个头小的野生苹果能提供更多的抗氧化物(老实说,住在城里的人很难找到野生苹果),抗氧化物存在于果皮中。与市面上卖大苹果相比,得吃更多野生苹果才能获得相同的热量。  </p></li><li><p>根据Nutrition Data的分析,一个大苹果含有4617毫克蔗糖和13157毫克果糖。因此,用之前的计算,我们可以看到一个苹果总共含13157+(4617/2)=15465毫克或者说155克果糖。这与12盎司苏打水所含的果糖量相当。但是,苹果所含的维生素C有助于平衡过量果糖对健康的负面作用。  </p></li></ul><ol start="4"><li><b>牛奶中的成分</b>  </li></ol><ul><li><p>喝牛奶的时候,我们会摄入一部分乳糖。这种糖的成分一半是葡萄糖,一半是半乳糖。  </p></li><li><p>一杯全脂牛奶含有13克糖,全以乳糖形式存在,12836毫克(或728克)。全脂牛奶的宏量营养素比是304921,这意味着它含有49%的脂肪。牛奶能量的70%来自脂肪和蛋白质(详情可访问ht:/ /nutritiondata self, com/facts,/ dairy-and-egg-products659/2)。</p></li><li><p><b>乳糖酶能把乳糖分解成小肠能吸收的构成乳糖的葡萄糖和半乳糖。乳糖酶缺乏就是通常所称的“乳糖不耐症”。具有这种消化不良症的人不能喝普通牛奶,常常得用豆奶代替</b>  </p></li></ul><ol start="4"><li><b>多糖或淀粉</b>  </li></ol><ul><li><p>多糖就是很多糖结合在一起,有时候包括数以千计的葡萄糖单体。换句话说,多糖是葡萄糖和其他分子构成的一个复杂的乐高积木模型,因此也通常称为“复合碳水化合物”。  </p></li><li><p>复合碳水化合物归根到底是由糖互相连接起来的。经过消化,碳水化合物被分解成许多葡萄糖单体并且以相对比较快的速度释放到血液里面,至少从它影响代谢这个角度上讲比较快。一些复杂的碳水化合物或淀粉,比如土豆和白面包,血糖生成指数比蔗糖高。血糖生成指数是衡量食物对葡萄糖和胰岛素在血液中升高之影响的老方法。<b>但是有一种复杂碳水化合物,比如糙米,就不含一丁点果糖,如果你正在寻找碳水化合物含量高但是果糖不多的食物,糙米就是一个很好的选择。含有纤维的复杂碳水化合物(比如南瓜)还有一个额外的好处,在小肠经过不完全消化后,能促进大肠微生物的生长。</b>  </p></li></ul><ul><li>多糖包括以下几种物质:淀粉,比如香蕉或烤土豆;糖原,即储存在肌肉或肝脏(或者其他地方)里的动物性淀粉;纤维素,不能消化但是经常提倡摄入的膳食纤维。  </li></ul><ul><li><p>反刍动物或食草动物(比如放牧奶牛、绵羊、山羊、野牛、驼鹿和麇鹿)的胃都很特殊,能够利用微生物使纤维素发酵,不管是青草还是木棍、树枝或杂草,都能转化成它们能消化的物质,最终转化为短链脂肪酸,被身体吸收利用。<b>所以,虽然这些动物是草食动物,但实际上摄入的却是高脂肪膳食!</b>  </p></li><li><p>我们能消化淀粉,因为我们的唾液中和胰腺液中都含有淀粉酶。胰腺液能在小肠中帮助淀粉进行分解。淀粉酶使淀粉分解成麦芽糖这种由两个葡萄糖分子组成的双糖,后面的工作由麦芽糖酶来完成,最终使葡萄糖能够被吸收并进入血液  </p></li></ul><ol start="5"><li><b>蛋白质</b>  </li></ol><ul><li><p>蛋白质是人体结构和功能的关键成分,通常占一个人每日能量摄入的10%-30%。如果每日膳食摄入2400大卡,那么25%来源于蛋白质,即600大卡或者150克。  </p></li><li><p>当蛋白质的摄入量达到总能量摄入的35%时,机体代谢蛋白质的能力就下降了,这就是不推荐过多摄入蛋白质并以蛋白质为主要能量来源的原因。如果膳食以瘦蛋白质为主,缺乏脂肪和碳水化合物,可能导致潜在的致命性危险,即“蛋白质中毒综合征”( (rabbit starvation syndrome)。  </p></li></ul><ol start="6"><li><b>蛋白质做重要的事情</b>  </li></ol><ul><li><p>从大大小小的方面来讲,身体都需要蛋白质。从本质上讲,人类的基因就是创建蛋白质食谱。骨骼肌中含有的蛋白质称为肌球蛋白和肌动蛋白;骨骼的五分之一是由胶原蛋白构成的,胶原蛋白是结缔组织(比如韧带和肌腱)的主要成分。器官组织、内脏、皮肤、头发(角蛋白)和血管也包含结构蛋白质。  </p></li><li><p>蛋白质还具有功能性。它们做重要的事情。蛋白质可以构成激素(包括胰高血糖素、胰岛素和生长激素),组成免疫系统细胞,比如抗体、酶(身体化学反应的催化剂,本身也参与消化,来源:htt://en. wikipedie.org/wiki,/Hemoglobin),还可以构建红细胞和白细胞。这些都是功能性蛋白的作用。图3-6显示了一个血红蛋白分子,是细胞内一种复杂的蛋白质,它的作用就是携带氧到全身各处。  </p></li><li><p>蛋白质就像乐高积木,但这次乐高的主角是氨基酸,蛋白质的基本单位。通过对24种氨基酸的大量组合,人体能制造数百万种不同的蛋白质  </p></li><li><p><b>.根据个人的体型大小,人的一生中能制造500T~1000T蛋白质。</b>  </p></li><li><p>蛋白质是这样命名的:10个及以上的氨基酸构成多肽(两个氨基酸组成二肽,三个氨基酸组成三肽)。50个及以上的氨基酸构成的多肽叫蛋白质,蛋白质可由上万个氨基酸组成。  </p></li><li><p>蛋白质必须分解成构成它们的氨基酸才能被消化。这个过程首先发生在胃,然后是小肠,还要动用好多酶,包括多肽酶、蛋白酶和胰蛋白酶。16随后蛋白质的组成单位“氨基酸”来到肝脏(实际上有些会因供能而被代谢掉),再到达血液,被细胞攫取,制造出更多蛋白质。  </p></li></ul><ol start="7"><li><b>必需氨基酸</b>  </li></ol><ul><li><p>蛋白质是由20种氨基酸任意组合而成的,其中10种因为必须来自于膳食而被认为是必需氨基酸。这10种氨基酸是异亮氨酸、亮氨酸、赖氨酸、蛋氨酸、苯丙氨酸、苏氨酸、色氨酸、缬氨酸、精氨酸(婴儿必需)和组氨酸(婴儿必需)(来自 Elaine Marie和 Katja Hoehn的《人体解剖学和生理学》一书)。如果膳食中这10种氨基酸的含量不够,身体就无法合成相应的必需蛋白质。  </p></li><li><p>运动生理学家威廉·麦卡尔德(WilliamMcArdle)等人写的《运动生理学》一书中,只列出了8种必需氨基酸,并指出婴儿不能合成组氨酸并且“合成精氨酸的能力较低”。  </p></li><li><p>20种氨基酸中除了必需氨基酸之外,其余的氨基酸是丙氨酸、天冬酰胺、天冬氨酸、半胱氨酸、甘氨酸、谷氨酸、谷氨酰胺、脯氨酸、丝氨酸和酪氨酸。  </p></li></ul><p>8.<b>摄入蛋白质</b>  </p><ul><li>摄入含蛋白质的食物(比如肉、鱼、蛋、奶酪、坚果和植物性食物),正如我们提到的,蛋白酶和其他酶把大块头的蛋白质分解成构成它们的氨基酸,然后被小肠吸收,并释放到肝脏和血液中  </li></ul><ul><li><p>机体能够根据身体的需要对氨基酸做以下处理  </p></li><li><p>作为制造蛋白质的原料,被细胞摄取  </p></li><li><p>肝脏能够用氨基酸合成葡萄糖,为机体供能,这个过程叫“糖异生”。  </p></li><li><p>在肝脏将氨基酸转化为葡萄糖或类脂之后,它们也能以糖原(即肌肉燃料)或脂肪的形式储存起来。  </p></li><li><p><b>没错,膳食中过量的碳水化合物和蛋白质都是以脂肪的形式储存下来的</b>  </p></li></ul><ul><li>已经在细胞内的蛋白质(不是来源于食物)最终分解成组成它们的氨基酸,然后重新合成机体需要的蛋白质。这是一个非常复杂和巧妙的代谢过程。在这个过程中,肝脏发现蛋白质和氨基酸有这么多不同的用途。但是最重要的一个步骤是在肝脏代谢氨基酸(比如用它们来生产葡萄糖)的过程中,肝脏会把氨基酸分解成氨,然后氨被转化为尿素,由肾脏分泌,最后通过小便排出。  </li></ul><ol start="9"><li>酮体  </li></ol><ul><li><p>在谈到营养(特别是低碳饮食)和禁食时都会涉及到酮体。等于目前人们对酮体很好奇或者很迷惑,因此我们在本章最后要简要讨论酮体。  </p></li><li><p>酮体还参与脂肪分解。机体有三个营养池用于燃烧供能:脂肪、碳水化合物和蛋白质,供应量的大小从高到低。心脏和骨骼肌“满不在乎”地燃烧脂肪来供能,这些游离脂肪酸是从我们存储的脂肪(甘油三酯)中释放出来,或者是从膳食中摄入的。通常在休息时,大脑会“贪婪”地用掉大部分葡萄糖(前面说过,大脑消耗的能量占身体总能量的20%)。  </p></li></ul><ul><li>线粒体是身体细胞内(比如骨骼肌和心肌细胞)的小发电站,它能轻而易举地代谢机体存储的或膳食中摄入的脂肪来产生身体所需在的能量。当我们休息时,比如坐在椅子上或者睡觉的时候,70%的能量来自于脂肪燃烧。由于人体存储的能量大部分是以脂肪形式存在的,并且人在不吃东西(处于吸收状态)或者在参加高速自行车赛或公路赛时燃烧的主要物质是脂肪,所以燃烧脂肪貌似是我们人的天性。  </li></ul><ul><li>人体脂肪代谢的机制显然跟不上快速耐力运动(比如每分钟心跳140次或更高)对氧的大量需求,否则,选手们就用不着GU(一种能量胶)和能量棒(本质上是浓缩葡萄糖)来支持他们跑完马拉松和铁人三项赛(参见第10章)。  </li></ul><ul><li><p>如果正在进行间歇性禁食或者奉行低碳水化合物的饮食(即不足一天的禁食,摄入极低碳水化合物膳食,特别是在饥饿的时候),发生在肝脏中的代谢通路就会来到一个岔路口,利用脂肪来产生能量。通常情况下,如果此时体内有更多的碳水化合物,就会生成一种足量的化学物质。但由于禁食,碳水化合物减少,代谢通路上的乙酰辅酶A( acety-COA)就会蓄积起来。  </p></li><li><p>这时,肝脏会利用乙酰辅酶A生成另一种能量来源,称为“酮体”。酮体和脂肪酸以及来自肌肉氨基酸的葡萄糖(糖异生)为机体混合供能。  </p></li></ul><ul><li><p>酮体是生命体中一种古老的生化物质,一种常见的能量底物(显然,婴儿生下来就能代谢大量酮体来维持生命,因为他们的大脑袋所消耗的热量占总热能的60%或更多)。实际上,每克酮体提供的卡路里比葡萄糖高(每克酮体产热476大卡,而每克葡萄糖产热4大卡)。  </p></li><li><p><b>心脏和大脑能够利用酮体供能。科学研究表明,心脏利用酮体供能的效率更高。</b>  </p></li><li><p>很多研究人员和医生提出理论说,人体已经进化出在食物供应非常不稳定和食物缺乏的时候用酮体通路来维持肌肉活动和继续为大脑供能(如果燃烧酮体,就可以少浪费一些肌肉氨基酸来生成葡萄糖。肌肉是我们身体活动和生存根本)。  </p></li><li><p>“脂肪被代谢成酮体,替代葡萄糖作为大脑主要的供能物质,”波士顿大学的教授托马斯·塞福德(ThomasSeyfried)博士说:“酮体代谢减少了炎症,并且提高了大多数细胞的代谢效率。”  </p></li><li><p>下一次我要是感染了某种病毒,你绝对可以相信我打算通过禁食来驱除它,比如长时间只喝茶而不吃东西。当然,我并不是说生病是禁食的唯一原因。只要采取禁食方法,身体总会在某个时候开始燃烧酮体来供能,我并不特别介意这事究竟何时发生。  </p></li></ul><hr><h3 id="4-微量营养素：维生素、矿物质和植物化学素"><a href="#4-微量营养素：维生素、矿物质和植物化学素" class="headerlink" title="4. 微量营养素：维生素、矿物质和植物化学素"></a>4. 微量营养素：维生素、矿物质和植物化学素</h3><ol><li><p>维生素C是合成胶原蛋白所必需的，所以缺乏维生素C，是会导致身体散架的。  </p></li><li><p>一个中等大小的苹果含有约8.4克维生素C（人平均每天得要6毫克维生素C才不会死），因此吃一个苹果是远远不够的，得吃更多的食物才能达到维生素C的推荐膳食摄入量，即<b>男性90毫克，女性75毫克</b>  </p></li><li><p>大多数微量营养素都不能从身体中合成，因此得从膳食或营养补充剂中获得。  </p></li><li><p>一般来说，人们应该使钾和钠的摄入比例保持在大约4：1.  人体应该采取钾钠比很高的饮食结构。  </p></li></ol><hr><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用</title>
      <link href="/2018/12/22/Git%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/12/22/Git%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="Git使用"><a href="#Git使用" class="headerlink" title="Git使用"></a>Git使用</h3><ol><li>git init  </li></ol><p>这个时候用到了第一个命令，代表初始化 git 仓库，输入 git init 之后会提示：  </p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1543311484080.png" alt="enter description here"></p><p>可以看到初始化成了，至此 test 目录已经是一个 git 仓库了。  </p><a id="more"></a><ol start="2"><li>git status  </li></ol><p>紧接着我们输入 git status 命令，会有如下提示：  </p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1543311575885.png" alt="enter description here"></p><p>默认就直接在 master 分支，关于分支的概念后面会提，这时最主要的是提示 a.md 文件 Untracked files ，就是说 a.md 这个文件还没有被跟踪，还没有提交在 git 仓库里呢，而且提示你可以使用 git add file 去操作你想要提交的文件。  </p><p>git status 这个命令顾名思义就是查看状态，这个命令可以算是使用最频繁的一个命令了，建议大家没事就输入下这个命令，来查看你当前 git 仓库的一些状态。  </p><ol start="3"><li>git add  </li></ol><p>上面提示 a.md 文件还没有提交到 git 仓库里，这个时候我们可以随便编辑下 a.md 文件，然后输入 git add a.md ，然后再输入 git status :  </p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1543311641403.png" alt="enter description here"></p><p>此时提示以下文件 Changes to be committed ， 意思就是 a.md 文件等待被提交，当然你可以使用 git rm –cached 这个命令去移除这个缓存。  </p><ol start="4"><li>git commit  </li></ol><p>接着我们输入 git commit -m ‘first commit’ ，这个命令什么意思呢？ commit 是提交的意思，-m 代表是提交信息，执行了以上命令代表我们已经正式进行了第一次提交。  </p><p>这个时候再输入 git status ，会提示 nothing to commit。  </p><ol start="5"><li>git log  </li></ol><p>这个时候我们输入 git log 命令，会看到如下：  </p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1543311753479.png" alt="enter description here"></p><p>git log 命令可以查看所有产生的 commit 记录，所以可以看到已经产生了一条 commit 记录，而提交时候的附带信息叫 ‘first commit’ 。  </p><ol start="6"><li>git add &amp; git commit</li></ol><p>看到这里估计很多人会有疑问，我想要提交直接进行 commit 不就行了么，为什么先要再 add 一次呢？首先 git add 是先把改动添加到一个「暂存区」，你可以理解成是一个缓存区域，临时保存你的改动，而 git commit 才是最后真正的提交。这样做的好处就是防止误提交，当然也有办法把这两步合并成一步，不过后面再介绍，建议新手先按部就班的一步步来。  </p><ol start="7"><li>git branch  </li></ol><p>branch 即分支的意思，分支的概念很重要，尤其是团队协作的时候，假设两个人都在做同一个项目，这个时候分支就是保证两人能协同合作的最大利器了。举个例子，A, B俩人都在做同一个项目，但是不同的模块，这个时候A新建了一个分支叫a， B新建了一个分支叫b，这样A、B做的所有代码改动都各自在各自的分支，互不影响，等到俩人都把各自的模块都做完了，最后再统一把分支合并起来。  </p><p>执行 git init 初始化git仓库之后会默认生成一个主分支 master ，也是你所在的默认分支，也基本是实际开发正式环境下的分支，一般情况下 master 分支不会轻易直接在上面操作的，你们可以输入 git branch 查看下当前分支情况：  </p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1543311801330.png" alt="enter description here"></p><p>如果我们想在此基础上新建一个分支呢，很简单，执行 git branch a 就新建了一个名字叫 a 的分支，这时候分支 a 跟分支 master 是一模一样的内容，我们再输入 git branch 查看的当前分支情况：  </p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1543311814443.png" alt="enter description here"></p><p>但是可以看到 master 分支前有个 * 号，即虽然新建了一个 a 的分支，但是当前所在的分支还是在 master 上，如果我们想在 a 分支上进行开发，首先要先切换到 a 分支上才行，所以下一步要切换分支  </p><ol start="8"><li>git checkout a  </li></ol><p>执行这个命令，然后再输入 git branch 查看下分支情况：  </p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1543311859389.png" alt="enter description here"></p><p>可以看到当前我们在的分支已经是a了，这个时候 A 同学就可以尽情的在他新建的a分支去进行代码改动了。  </p><p>那有人就说了，我要先新建再切换，未免有点麻烦，有没有一步到位的，聪明：  </p><ol start="9"><li>git checkout -b a</li></ol><p>这个命令的意思就是新建一个a分支，并且自动切换到a分支。  </p><ol start="10"><li>git merge</li></ol><p>A同学在a分支代码写的不亦乐乎，终于他的功能完工了，并且测试也都ok了，准备要上线了，这个时候就需要把他的代码合并到主分支master上来，然后发布。git merge 就是合并分支用到的命令，针对这个情况，需要先做两步，第一步是切换到 master 分支，如果你已经在了就不用切换了，第二步执行 git merge a ，意思就是把a分支的代码合并过来，不出意外，这个时候a分支的代码就顺利合并到 master 分支来了。为什么说不出意外呢？因为这个时候可能会有冲突而合并失败，留个包袱，这个到后面进阶的时候再讲。  </p><ol start="11"><li>git branch -d</li></ol><p>有新建分支，那肯定有删除分支，假如这个分支新建错了，或者a分支的代码已经顺利合并到 master 分支来了，那么a分支没用了，需要删除，这个时候执行 git branch -d a 就可以把a分支删除了。</p><ol start="12"><li>git branch -D</li></ol><p>有些时候可能会删除失败，比如如果a分支的代码还没有合并到master，你执行 git branch -d a 是删除不了的，它会智能的提示你a分支还有未合并的代码，但是如果你非要删除，那就执行 git branch -D a 就可以强制删除a分支。  </p><ol start="13"><li>git tag</li></ol><p>我们在客户端开发的时候经常有版本的概念，比如v1.0、v1.1之类的，不同的版本肯定对应不同的代码，所以我一般要给我们的代码加上标签，这样假设v1.1版本出了一个新bug，但是又不晓得v1.0是不是有这个bug，有了标签就可以顺利切换到v1.0的代码，重新打个包测试了。  </p><p>所以如果想要新建一个标签很简单，比如 git tag v1.0 就代表我在当前代码状态下新建了一个v1.0的标签，输入 git tag 可以查看历史 tag 记录。  </p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1543312000142.png" alt="enter description here"></p><p>可以看到我新建了两个标签 v1.0、v1.1。  </p><p>想要切换到某个tag怎么办？也很简单，执行 git checkout v1.0 ，这样就顺利的切换到 v1.0 tag的代码状态了。  </p><p>OK，以上全是一些最基本的Git操作，而且全是在本地环境进行操作的，完全没有涉及到远程仓库，下一章节将以远程 GitHub 仓库为例，讲解下本地如何跟远程仓库一起同步协作，另外今天讲的全是最基础最简单的Git操作，一步步来，后续再继续讲解一下Git的高阶以及一些Git的酷炫操作。  </p><hr><blockquote><p><a href="https://zhuanlan.zhihu.com/p/22666153" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/22666153</a>  </p></blockquote><p>使用git在本地创建一个项目的过程  </p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~<span class="regexp">/hello-world    /</span><span class="regexp">/创建一个项目hello-world</span></span><br><span class="line"><span class="regexp">$ cd ~/</span>hello-world       <span class="comment">//打开这个项目</span></span><br><span class="line">$ git init             <span class="comment">//初始化 </span></span><br><span class="line">$ touch README</span><br><span class="line">$ git add README        <span class="comment">//更新README文件</span></span><br><span class="line">$ git commit -m <span class="string">'first commit'</span>     <span class="comment">//提交更新，并注释信息“first commit”</span></span><br><span class="line">$ git remote add origin git@github.test/hellotest.git     <span class="comment">//连接远程github项目  </span></span><br><span class="line">$ git push -u origin master     <span class="comment">//将本地项目更新到github项目上去</span></span><br></pre></td></tr></table></figure><p>git设置关闭自动换行  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global core.autocrlf <span class="literal">false</span></span></span><br></pre></td></tr></table></figure><p>为了保证文件的换行符是以安全的方法，避免windows与unix的换行符混用的情况，最好也加上这么一句   </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git config --global core.safecrlf <span class="literal">true</span></span></span><br></pre></td></tr></table></figure><p>git tag 使用  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">tag</span>  <span class="title"># 列出当前仓库的所有标签</span></span><br><span class="line"><span class="title">git</span> <span class="keyword">tag</span> <span class="title">-l</span> 'v0.<span class="number">1</span>.*'  <span class="comment"># 搜索符合当前模式的标签</span></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">v0</span>.<span class="number">2.1</span>-light  <span class="comment"># 创建轻量标签</span></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> v0.<span class="number">2.1</span> -m '<span class="number">0.2</span>.<span class="number">1</span>版本'  <span class="comment"># 创建附注标签</span></span><br><span class="line">git checkout [tagname]  <span class="comment"># 切换到标签</span></span><br><span class="line">git show v0.<span class="number">2.1</span>  <span class="comment"># 查看标签版本信息</span></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">-d</span> v0.<span class="number">2.1</span>  <span class="comment"># 删除标签</span></span><br><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> v0.<span class="number">2.1</span> <span class="number">9</span>fbc3d0  <span class="comment"># 补打标签</span></span><br><span class="line">git push origin v0.<span class="number">1.2</span>  <span class="comment"># 将v0.1.2标签提交到git服务器</span></span><br><span class="line">git push origin --tags  <span class="comment"># 将本地所有标签一次性提交到git服务器</span></span><br><span class="line">git <span class="keyword">tag</span>  <span class="title"># 查看当前分支下的标签</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 技术驿站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何学好英语？</title>
      <link href="/2018/12/05/%E5%A6%82%E4%BD%95%E5%AD%A6%E5%A5%BD%E8%8B%B1%E8%AF%AD%EF%BC%9F/"/>
      <url>/2018/12/05/%E5%A6%82%E4%BD%95%E5%AD%A6%E5%A5%BD%E8%8B%B1%E8%AF%AD%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<blockquote><p>study<br>2018年12月05日22:19:22<br>55 篇<br>made by jixi<br><a href="https://www.zhihu.com/search?type=content&amp;q=%E5%AD%A6%E4%B9%A0%E8%8B%B1%E8%AF%AD" target="_blank" rel="noopener">https://www.zhihu.com/search?type=content&amp;q=%E5%AD%A6%E4%B9%A0%E8%8B%B1%E8%AF%AD</a></p></blockquote><h3 id="如何学好英语？"><a href="#如何学好英语？" class="headerlink" title="如何学好英语？"></a>如何学好英语？</h3><hr><p>我回答的不是怎么学英语，而是怎样才能坚持学英语。  </p><p>我看了很多人的回答，比如每天坚持读英文原著，每天坚持看报纸，每天坚持背单词，每天坚持听VOA。他们都是非常正确的学习英语的方法，如果题主能每天坚持做到，你一定能成功，我也无需多言其他。但是我将回答你可能没问，但是实际上更加迫切需要回答的问题：怎样才能坚持学英语？  </p><p>任何事情，包括学英语，很多人都会说“不经一番彻骨寒，怎得梅花扑鼻香“。（好浓一碗汤，壮士我先干为敬）  </p><p>我也知道如果我坚持每天一个小时背50个单词，一年之后肯定能背完托福8000单词，哈佛剑桥不是梦想；我也知道我每天阅读英文原著一小时，几年之后肯定文笔优美出口成章，万千文艺女青年迷倒在我的苏格兰短裙下。  </p><p>但是问题是，如何才能坚持做一件这么无聊无趣让人抓狂的事情整整一年或更久呢。  </p><p>答案不是去新东方打一针鸡血，回家计划一年的学习计划，奋斗3天3夜发现没有效果然后放弃，而是理性的认识和有效的具体操作方法。  </p><a id="more"></a><p>用比较科学的方式来解释，就是”每天积累一点点“这种方式见效非常慢，反馈时间太长，而人在短时间内得不到成就感和满足感就特别容易放弃。。。仔细想想你们的单词书，是不是无数次拿起它，翻到不到一半，发现总是背了又忘，于是把它放下；或者想想其他任何事情，是不是都是因为发现一直没有正反馈，感到希望渺茫而放弃。  </p><p>所以，题主不如尝试换一种思维方式：简单粗暴的在短时间内集中火力狂轰滥炸迅速提高自己的某一方面技能，看到自己的进步和提高，获得成就感和满足感，然后才有兴趣去持续的努力和提高。  </p><p>这里先介绍一下我学英语的过程，然后介绍学习的具体方法。虽然并不一定适合所有人，但是题主不妨一试。（大二汪反正也没什么正经事吧嘻嘻嘻。）  </p><p>我大概小学二、三年级开始学英语。一直到高一，除了学习了课本上的李雷、韩梅梅和他们之间羞羞的事情，我还在课外学了新概念123。所以整体基础还算是不错的，但是要说好到哪里去也没有。但是高一是我的转折点，起因是我想以后可以出国读书，然后在新东方门诊部猛打了一剂鸡血。于是高一的暑假，我每天背单词8个小时，坚持了2个月。结果是，我不仅把高一到高三全部单词都搞定，还背完了大学四级和六级词汇。（也就是从大概2500左右的词汇量，2个月之内达到6000）其实我现在也回忆不起来当初为什么要选择单词这样一个突破口，但这却对我后来产生了很大的影响。最直接的体现就是在英语单词这方面我已经可以碾压所有同学，问啥单词我都知道，所以英语老师格外喜欢我。而且英语老师年轻又漂亮，每次夸我棒棒哒，我都觉得自己羞羞哒和萌萌哒，可开心了。而这短时间内的巨大进步，让我体会到了前所未有的成就感和自信。你造吗，这些可是我之后持续学习英语的源泉啊。  </p><p>高二第一学期的时候，我们学校有去加拿大友好学校交流访问的机会。我回来之后便更加坚定我出国读书的想法。而刚好加拿大学校也会在我们学校选2个同学并给予奖学金过去读书。评选的方式为考试，有英文，数学，科学，历史，听力，面试等。而这些考试的载体都是英文。这意味着我需要再次在短时间内有一个很大的提高才能获得这次机会，毕竟我们学校有从小在美国读过书的同学，还有各路学霸学神级人物。（我们高中也算是全国前列的吧，国际奥林匹克金牌数目全国第一）所以接下来的一段时光，是我每每回想起来都会感动得眼泪汪汪的几个月。每天早上5点多起床背单词，7点出门上课。走在路上做泛听练习（老友记），午休时做托福精听和听写，晚上写完作业看看英文原著，直到累得睡着。高二的寒假更加辛苦，白天在新东方刷10小时的托福课和口语课，晚上回家累了就看看老友记，还能撑就背背单词看看原著。总之这一段时间完全沉溺在英语中，背完托福（8000）背SAT（12000），看完了几本英文原著，做了上百篇听写，老友记10季共236集一共刷了至少5遍，（看一遍，其他都是用mp3听）最后终于如我所愿可以出国读书。在加拿大读高中的时候又把GRE的单词（大概22000词汇量）也刷了几遍。随后因为在纯英语环境，自己本身又有不错的基础，所以学英文再也不怎么费力了。其实仔细想想，我最用功学习英语的时间加起来也不过半年左右，但是这段时间我实现了一个飞跃。    </p><p>下面说说具体的操作方法。分几个板块分别来讲。</p><h3 id="1-单词篇"><a href="#1-单词篇" class="headerlink" title="1. 单词篇"></a>1. 单词篇</h3><p>首先说说背单词的心诀，也就是要有正确的认识。有的人觉得我背单词一遍两遍三遍都记不住，所以我天生愚笨，不会背单词。给你3个字，瞎扯淡。  </p><p>事实是，如果一遍两遍甚至五遍都背不出来，说明你是个。。。正常人。记单词就是一个重复记忆的过程，有的词你看2-3次就记住了，有些词要记10遍还不一定记住。首先要接受这个现实，不要因为背了几次还没背出来而感到灰心和沮丧，因为每个人都是这样。理解这一点，是坚持下来的第一步。   </p><p>然后，谈谈背单词的招式，也就是具体的操作方法。这个部分其实很因人而异，有的人喜欢读，有的人喜欢写，有的人喜欢在脑子里拼出来，还有人喜欢用联想法。这几种我都试过，我认为联想法是比较有用的，也就是在脑子里联想一个情节或故事或读音，比如ambulance（俺不能死）。但是，并不是所有的单词都可以有比较合理的联想，往往联想就用去了很多时间。所以我最终用的方式还是简单粗暴：大量、快速的反复记忆。  </p><p>理论依据是：比如有的人说，我一天背10个词，一个月能背300个。假设能记住80%，那最后我能记住240个。但是如果我用相同时间，每天快速看100个词，一个月能看3000个。假设能记住30%，最后能记住900个，远远大于第一种方式。  </p><p>所以我高一背单词的时候，每个单词停留的时间非常短，大概3-5秒看一个词，最多花10秒，然后就看下一个。100分钟时间，最起码能看600个词，效率一点能到1000个。别人花几个月背完一本单词书，我几天就能翻完一次。但是这种方式的一个关键点是，反复记忆，复习为王。根据艾宾浩斯记忆曲线，人在记忆最开始时忘记得越快。所以我当时，总是要提醒自己每过10几分钟都要往前翻一翻，为了在遗忘之前巩固复习一下。之后我发现了一个非常好用的软件，叫奇迹英语，是现在拓词扇贝之类app的前身吧。据说他是根据艾宾浩斯曲线，帮助你在合适的时候复习单词。我高二就是用这个软件，刷完了托福赛达GRE单词。   </p><p>这样背的好处是什么？首先可以快速提高单词量。其次，因为单词很快的过了一遍，所以会花大量的时间复习。而复习才是收获成就感的时候。你会很快的发现，”诶这个词记得了，那个词又有印象了“ 所以在背单词的时候就有动力，是一个非常好的良性循环。第三，每次翻完一本书，都有一种强烈的满足感。或者软件上每天显示我背了多久，记住了多少单词，都是对我的付出给予的正面反馈，帮助我更好的持之以恒。这是每天背完之后对自己的一个肯定，也是一个良性循环。  </p><p>所以当我在背单词的时候能得到成就感，背完单词后能得到满足感，这就不是一个非常难坚持的事情了。甚至在我背GRE的时候，经常会有很爽的感觉，我一度以为背单词可以让我分泌多巴胺。在我大四真正要开始备考GRE的时候，我花在单词上的时间，也就几天而已。</p><p><img src="https://www.github.com/jixiyu/images3/raw/master/%E5%B0%8F%E4%B9%A6%E5%8C%A0/1544020564483.png" alt="enter description here"></p><p>单词是我的突破口，我觉得也是大多数人可以作为突破的方向。毕竟这种死板的东西，只要智商为正加一定时间的积累，都是可以做好的啊。</p><hr><h3 id="2-听力篇"><a href="#2-听力篇" class="headerlink" title="2. 听力篇"></a>2. 听力篇</h3><p>听力分两种练习方式，精听和泛听。  </p><p>所谓精听，就是把一篇文章听到极致。比如我之前用过四级听力题，托福听力题，和VOA做精听材料，每篇文章都要反复的听直到完全听清楚每一句话，每一个词。而检验是否做到这一点最好的办法，就是听写。首先根据自己水平程度选择材料的难易，网上有很多网站提供这些资源（最好选3-5分钟左右的文章）。选择的标准是，大概第一遍能听懂60-70%就差不多。然后开始听写，不管要听多少遍（一般15遍-30遍），我会把每一篇材料听得再也写不出一个字来。然后开始对答案，这时会发现大概10%-15%的内容听错了或者没有听写出来。把这些内容找出来，然后花大量时间去研究和复习。问自己这些问题：为什么听错呢？是因为这个词不认识？那就赶紧背单词去。。。是因为读音不熟悉？那就跟着正确的读音多读几遍。。。还是自己本来这个音就读错了？赶快自我纠正，防止以后有类似音的词搞错。 总之，听写只是找出自己的弱点，而之后的修正才是最最重要的地方。基本上做30-40篇听写，就能基本听出95%的内容。然后提高一个难度等级，继续做30-40篇听写。提高的同时，词汇量一定也要同时提高。毕竟如果单词不认识，那就不可能听得出来的啊。  </p><p>然后是泛听。泛听是让我们接触更多类型和风格的英语环境，泛听也是检验自己听力是否提高的试金石。有的人选择广播节目，有的人听VOA或者BBC新闻，但我喜欢听美剧（老友记），因为他还能同时帮助我提高口语。之前讲过，我高二的时候刷老友记5遍以上。其实后来我一直都在刷，到现在236集每集我都刷了不止10遍。因为第一次看，肯定是关注剧情去了。只有对剧情了如指掌的时候，才会开始注意语言。我掌握到了什么程度呢？在我巅峰时期，任何人说上一句台词，我脑子里能本能的反应出下一句。这样不仅锻炼听力，对口语也有巨大的帮助。因为老友记里面都是最日常的对话，很多场合都可以用到。最美式的发音和俚语脱口而出，就是这么酷炫。  </p><p>我之后也看过很多美剧，但是老友记至今为止还是我最喜欢的美剧，没有之一。而且我每次看，都能找到新的笑点，和一些之前没有get到的内容。真是妙不可言啊。</p><hr><hr><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记——锻炼</title>
      <link href="/2018/11/09/%E7%A1%AC%E6%B4%BE%E5%81%A5%E8%BA%AB%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/11/09/%E7%A1%AC%E6%B4%BE%E5%81%A5%E8%BA%AB%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>读书笔记——锻炼<br>2018年11月9日15:30:04<br>01 篇<br>made by jixi</p></blockquote><h3 id="硬派健身读书笔记"><a href="#硬派健身读书笔记" class="headerlink" title="硬派健身读书笔记"></a>硬派健身读书笔记</h3><h5 id="总结的锻炼计划"><a href="#总结的锻炼计划" class="headerlink" title="总结的锻炼计划"></a>总结的锻炼计划</h5><p><b>.</b></p><ol><li>单手拉伸10次 ——3组————间隔锻炼  </li><li>双手拉伸10次——3组————间隔</li><li>俯卧撑宽距10个——3组——间隔</li><li>深蹲10个——3组——间隔</li><li>侧平举10个————1组</li><li>喝蛋白粉1杯3勺————持续整个时间<a id="more"></a></li></ol><hr><h3 id="1-训练入门者的忠告："><a href="#1-训练入门者的忠告：" class="headerlink" title="1. 训练入门者的忠告："></a>1. 训练入门者的忠告：</h3><p>放弃大多数小肌群训练  </p><p>从今天起，每天做一次大肌群训练<strong>（胸、背、臀、腿）</strong>6~10组；  </p><p>搭配核心肌群训<strong>（腹部、下背部）</strong>1~3组；  </p><p>最后做HIIT（高强度间歇训练）15~30分钟。  </p><p>一切从大肌群训练开始。  </p><hr><h3 id="2-有氧运动"><a href="#2-有氧运动" class="headerlink" title="2.有氧运动"></a>2.有氧运动</h3><ol><li><p>单纯的长时间有氧运动可以提升一些健康指标，比如血压什么的，但是在长时间的尺度上冰无益于体重和身体脂肪的减少。  </p></li><li><p>通过长时间的有氧运动来减重，对于体重正常的人来说，效果是很差的。  </p></li></ol><hr><h3 id="3-克制进食的坏处"><a href="#3-克制进食的坏处" class="headerlink" title="3.克制进食的坏处"></a>3.克制进食的坏处</h3><ol><li><p>定义：为了减轻体重或达到其他目的，习惯性地通过刻意抑制，忽视生理需求，来减少能量摄入的一种行为。  </p></li><li><p>尽管克制进食者都非常想控制自己的进食行为，但总体而言，绝大多数克制进食者的努力都是失败的。他们经常处于节食、暴食、过食交替出现的过程中。<br>很多研究表明，克制进食反而会显著提高暴食和神经性贪食症的出现频率，以及那些随之而来的风险。  </p></li><li><p>克制进食者在节食后，对高热量、高糖、高脂肪食物的喜爱程度显著增加，这可能与胰岛素等激素的分泌水平有关。  </p></li></ol><hr><h3 id="4-HIIT————“High-intenmsity-Interval-Training”"><a href="#4-HIIT————“High-intenmsity-Interval-Training”" class="headerlink" title="4. HIIT————“High-intenmsity Interval Training”"></a>4. HIIT————“High-intenmsity Interval Training”</h3><ol><li><p>意为：高强度间歇训练，一般指进行多次短时间、高强度的运动训练，在每两次高强度运动之间以较低强度的运动或完全休息形成间歇期。简单地说，就是一种高强度和低强度运动间歇交替的训练方式。</p></li><li><p>特点：短时间内运动较大，每次都要达到最大或至少接近最大的运动能力。但是运动时间较短，并且可以通过间歇性的低强度，来避免出现不适症状的出现。</p></li><li><p>高强度是指你在百米冲刺比赛时，咬着牙，平尽全力冲刺的强度，一般认为是采用全力冲刺或90%左右最大摄氧量的强度。而间歇，就是指在两次高强度运动之间用来喘口气的时间。</p></li><li><p>优点：HIIT不仅在消耗热量和脂肪方面表现突出，而且，一次HIIT训练可以让身体在很长时间内都处于燃脂转态。</p></li></ol><ul><li>变化的高强度——持久减脂，刺激生长激素（增加肌肉，减少脂肪）分泌</li><li>间歇运动——强效减脂，促进脂肪代谢</li></ul><hr><h3 id="5-俯卧撑"><a href="#5-俯卧撑" class="headerlink" title="5. 俯卧撑"></a>5. 俯卧撑</h3><p>真正的俯卧撑是用胸肌发力，将自身推起并有控制地落下，相当于一个负重训练，而重量就是你本人的体重。</p><ol><li>身体挺直，无论上升还是下降，躯干都应该是一条直线，即腹肌，背肌，臀肌绷紧，这样可以更好地传达力量。</li><li>注意发力的方式是夹紧胸部，用胸部发力，而不是伸直肘部，这样能更好的训练到胸。</li><li>一般而言，双手之间的距离越宽，对胸肌的训练效果越好。</li></ol><hr><h3 id="6-塑造胸型——杠铃卧推、龙门架拉索夹胸、悍马机"><a href="#6-塑造胸型——杠铃卧推、龙门架拉索夹胸、悍马机" class="headerlink" title="6. 塑造胸型——杠铃卧推、龙门架拉索夹胸、悍马机"></a>6. 塑造胸型——杠铃卧推、龙门架拉索夹胸、悍马机</h3><ol><li>杠铃卧推是所有胸部训练的基础。</li></ol><hr><h3 id="7-如何做出标准的平板杠铃卧推？"><a href="#7-如何做出标准的平板杠铃卧推？" class="headerlink" title="7. 如何做出标准的平板杠铃卧推？"></a>7. 如何做出标准的平板杠铃卧推？</h3><h5 id="1-动作"><a href="#1-动作" class="headerlink" title="1. 动作:"></a>1. 动作:</h5><ol><li>仰卧在卧推凳上,双脚自然踏地,双手正握杠铃,与肩同宽或宽于肩</li><li>将杠铃从卧推架上取下,缓慢下放杠铃,在杠铃离胸口有一点儿距离时停止。</li><li>迅速发力上推至手臂接近伸直,稍停后,做下一组动作。</li></ol><h5 id="2-要点"><a href="#2-要点" class="headerlink" title="2. 要点"></a>2. 要点</h5><ol><li>发力时,注意让胸部、肩关节和大臂向里夹,而不要注意肘关节的伸直。要挺胸、沉肩。  </li><li>动作过程中,上背部和臀部不可以离开凳面,形成拱腰。如果你的目标是训练胸肌,你最好也不要使用太多的腿部力量,双脚稳固而不借力</li><li>在训练中,杠铃的位置应该处于手掌根,而非掌心或掌前部。</li></ol><h5 id="3-胸肌器械训练有如下几个要点"><a href="#3-胸肌器械训练有如下几个要点" class="headerlink" title="3.胸肌器械训练有如下几个要点"></a>3.胸肌器械训练有如下几个要点</h5><ol><li>关节不要锁定。肘关节如果锁定,就代表着你要倚重肱三头肩关节锁定,就代表你要倚重三角肌前束了,都没有孤立地刺激胸。同时,你锁定关节,也代表你放弃了停止时的等长收缩机会。大重量还会给你的关节很多压迫,导致受伤或劳损。</li><li>沉肩夹胸。这就是刚才说的,不沉肩,你用的是三角肌前束;不夹胸,你用的是肱三头肌。</li><li>念动一致。一定要想着自己在夹胸,注意肌肉感觉,这是健美孤应训练的重点。</li><li>多种角度,上斜下斜等。虽然说胸肌的最上、最下两端是过顶运动训练决定的,但是胸肌的上部和下部的丰满程度还是需要上斜、下斜的哑铃卧推,需要经常改变角度的拉索卧推等。</li><li>多吃多喝多睡。胸肌训练就是为了围度、力度,所以,一定要保证吃喝跟上,确保超量恢复。</li><li>多用弹力带。弹力带可以确保你做的是等动收缩,而且在运动的全程,你的胸肌都在发挥最大力量。</li><li>拉伸。拉伸可以在充血时扩张筋膜,从而促进肌肉的生长。</li></ol><hr><h3 id="8-臀部"><a href="#8-臀部" class="headerlink" title="8. 臀部"></a>8. 臀部</h3><ol><li>半蹲是臀部肌群发力的最佳角度。  </li><li>侧向行走则是臀中肌群的主要方式，该动作是通过合理的发力姿势与运动方式激活臀部肌群。  </li></ol><hr><h3 id="9-肩膀"><a href="#9-肩膀" class="headerlink" title="9. 肩膀"></a>9. 肩膀</h3><h5 id="1-什么工作能够有效地感受并刺激三角肌中束呢？-——侧平举"><a href="#1-什么工作能够有效地感受并刺激三角肌中束呢？-——侧平举" class="headerlink" title="1. 什么工作能够有效地感受并刺激三角肌中束呢？  ——侧平举"></a>1. 什么工作能够有效地感受并刺激三角肌中束呢？  ——侧平举</h5><h5 id="2-动作介绍："><a href="#2-动作介绍：" class="headerlink" title="2. 动作介绍："></a>2. 动作介绍：</h5><ol><li>双臂持哑铃、矿泉水瓶、弹力带、手柄等。注意,重量不要大!双臂关节微曲(关节不锁定,也就是不伸到最直不能动的状态,这样不容易受伤)。</li><li>缓缓拾起双臂,此时,不要耸肩,不要挺腰,不要屈腿伸腿(不要借助斜方肌、背肌、腿肌等肌肉的力量)。肘关节可以微微朝上,这样更容易找到三角肌中束发力的感觉。</li><li>缓缓地、有控制地下落!这也是寻找发力感觉的重要方式,更是塑造肌肉线条的重要一步。</li><li>这个动作的重点在于:要保证持续地发力,保证肌肉一直处于紧张状态,也就是说,在抬起手臂和下落的过程中,不要依靠惯性,而要用你的肌肉让手臂匀速地升降!</li><li>一般来说,采取中等重量,每组做12次左右,每回3组,这样比较适合肩部肌肉生长。和其他所有肌群的训练方式一样,如果能做到力竭,就可以更好地刺激肩部肌肉生长。当然,肩部力竭时会有强烈的烧灼感,请大家一定要一边想象着马上就能拥有的宽厚肩膀,一边努力咬牙坚持!<br>的体成微训练  </li><li><b>每组12次，每回3组，中等力量，这样比较合适肌肉生长。</b></li></ol><h5 id="3-三角肌后束的训练方式——俯身侧平举"><a href="#3-三角肌后束的训练方式——俯身侧平举" class="headerlink" title="3. 三角肌后束的训练方式——俯身侧平举"></a>3. 三角肌后束的训练方式——俯身侧平举</h5><p>三角肌后束是整个身体的衣架和矫正器。一个人看着是否挺拔，是不是有精气神，肩部起着决定性的作用。   </p><p>俯身侧平举——俯身飞鸟</p><h5 id="4-动作介绍"><a href="#4-动作介绍" class="headerlink" title="4. 动作介绍"></a>4. 动作介绍</h5><ol><li><p>开始位置:两脚分开站立,与同肩宽,两手掌心相对持哑铃(心对或者拳心相对都可以),上体向前屈至与地面平行,两腿稍屈,腰部直,眼向前看。</p></li><li><p>动作过程:两手持铃向两侧举起,直至上臂与肩部平行(也可以略徽超过),稍微在最高处停顿片刻,然后匀速放下哑铃,还原到初始位置。</p></li><li><p><b>和侧平举一样,这个动作也采取中等重量,每组做12次左右,每回3组较适宜,能做到力竭就更棒了</b></p></li><li><p><b>同样,找不到三角肌后束感觉的人,可以采用上面介绍过的本体感觉训练法:一只胳膊做单臂俯身侧平举。另一只胳膊做顶峰收缩,然后交替类推,分别做5次、3次、2次、1次。这样做完算一组,一共做3组。</b></p></li></ol><h5 id="5-动作重点"><a href="#5-动作重点" class="headerlink" title="5. 动作重点"></a>5. 动作重点</h5><ol><li>腰部一定要挺直!想象着自己一边努力地往后面撅屁股,一边保持挺胸的状态,切记不要弓腰</li><li>在持铃向两侧举起时,使肘和腕部稍微弯曲,不要锁定关节,你能更明显地感受到三角肌肌群的收缩。</li><li>在整个动作过程中,思想要集中在收缩的肌群上,这样能更好地调动和募集你的肌群。</li></ol><h5 id="6-加强肩袖四肌"><a href="#6-加强肩袖四肌" class="headerlink" title="6. 加强肩袖四肌"></a>6. 加强肩袖四肌</h5><p>加强肩袖的稳定性，简单来说，你只需要做肩关节外旋的运动。——L侧平举和握住杠铃的古巴推举。</p><h5 id="7-动作介绍"><a href="#7-动作介绍" class="headerlink" title="7. 动作介绍"></a>7. 动作介绍</h5><ol><li>大臂小臂弯至90度,呈“L”形,手持哑铃,提至大臂与肩膀呈一条线</li><li>发力外旋肩关节,直到小臂与头部在一条直线上</li><li>有控制地缓缓下放哑铃(超重要),重复以上动作。</li></ol><h5 id="8-训练计划"><a href="#8-训练计划" class="headerlink" title="8. 训练计划"></a>8. 训练计划</h5><ol><li>L侧平举、俯身侧平举、杠铃、古巴推举,每个动作做8~10次为组,每回做3组左右。</li><li>另外,增强三角肌后束也可以增强肩部的稳定性,因为它是管外展的,力量也不错。所以,像一些典型的肩关节外展动作,如三角肌后束锻炼、哑铃俯身侧平举等,都可以很好地锻炼到肩部。</li><li>小肌群的主要问题很容易成为大重量动作的短板,从而导致受伤。但是,由于这几块肌肉也不是特别大块、有力的肌肉,所以,你只要做一两动作练习,别让它们成为你上肢动作的短板就行了。</li></ol><hr><h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><blockquote><p>2018年11月14日20:50:14</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 书籍 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
